How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    A) Can see the changes made to each line or if a line has been removed or added thus 
    can look ad differences to spot typos or faulty logic

How could having easy access to the entire history of a file make you a better
programmer in the long term?

    A) Easier to spot errors

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
    
    May forget. But added flexibility allows you to choose
    reasonable points in time to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    A) git is made with programmers in mind and programs often 
    require changes accross a few files because files often linked

How can you use the commands git log and git diff to view the history of files?
    
    A) git log will show me when and where commits or changes have been made and ids of commits
    git diff can then show me changes from first file to second
    To just know how many insertions and deletions can just use git log --stat

How might using version control make you more confident to make changes that
could break something?
    
    A) Because very easy to find where i made my mistake by using git checkout
    command and then git diff to check what  exactly I changed. So if I were
    wrong I could correct my mistake easily

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
